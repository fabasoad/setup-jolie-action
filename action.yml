---
name: "Setup Jolie"
author: Yevhen Fabizhevskyi
description: "Set up a specific version of Jolie."
branding:
  icon: terminal
  color: gray-dark
inputs:
  version:
    description: "Jolie version."
    required: false
    default: "1.12.2"
runs:
  using: "composite"
  steps:
    - name: Collect info
      id: info
      run: |
        realpath_installed=$(if command -v realpath >/dev/null 2>&1; then echo true; else echo false; fi)
        echo "realpath-installed=${realpath_installed}" >> $GITHUB_OUTPUT
        jolie_installed=$(if command -v jolie >/dev/null 2>&1; then echo true; else echo false; fi)
        echo "jolie-installed=${jolie_installed}" >> $GITHUB_OUTPUT
        mkdir -p "${GITHUB_WORKSPACE}/jolie"
        echo "jolie-path=${GITHUB_WORKSPACE}/jolie" >> $GITHUB_OUTPUT
      shell: sh
    - name: Install tools
      if: ${{ steps.info.outputs.realpath-installed == 'false' && runner.os != 'Windows' }}
      run: |
        if [ "${RUNNER_OS}" = "Linux" ]; then
          if [ -f "/etc/alpine-release" ]; then
            apk add coreutils
          else
            apt-get install coreutils
          fi
        else
          brew install coreutils
        fi
      shell: sh
    - name: Download jolie
      if: ${{ steps.info.outputs.jolie-installed == 'false' }}
      uses: actions/checkout@v4
      with:
        repository: jolie/jolie
        ref: v${{ inputs.version }}
        fetch-depth: 1
        path: jolie
    - name: Install jolie
      if: ${{ steps.info.outputs.jolie-installed == 'false' }}
      run: |
        mvn install -Dmaven.test.skip=true --quiet
        bin_path="$(pwd)/bin_$(date '+%Y%m%d%H%M%S')"
        mkdir -p "${bin_path}"
        echo "${bin_path}" >> "$GITHUB_PATH"
        ./scripts/dev-setup.sh "${bin_path}"
        echo "JOLIE_HOME=${bin_path}/jolie-dist" >> "$GITHUB_ENV"
      shell: bash
      working-directory: ${{ steps.info.outputs.jolie-path }}
